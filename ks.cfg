#Criado por Luiz Henrique de Campos Monteiro | Sistema Alma Linux 9.4 com Openbox | 07/24

# País e idioma
lang pt_BR.UTF-8  # Define o idioma para português do Brasil com UTF-8
keyboard br-abnt2  # Define o layout do teclado para ABNT2 (Brasil)
timezone --utc America/Sao_Paulo  # Define o fuso horário para São Paulo

# Rede
network --bootproto=dhcp --device=eth0 --noipv6 --activate # Configura a rede com DHCP, desativa IPv6 e ativa a interface eth0
network --hostname=Servidor # Define o nome do host como servidor
firewall --service=ssh --port=2224:tcp # Configura o firewall para permitir SSH na porta 2224

# Senha de root
# Utilizado para gerar senha: python3 -c 'import crypt; print(crypt.crypt(P4SSW0RD, crypt.mksalt(crypt.METHOD_SHA512)))' # Comando para gerar senha criptografada

rootpw --iscrypted $6$2ArCAWSG8u.Sa30r$y3xNCQ2oApwFogpYGfcLJziLAIRvKVkhKM.eNxnE9BgZpjg948kAmyT8k4rRexriuKIJIBb/Sq11IPH5izg2l/ # Define a senha criptografada para o usuário root

authselect --enableshadow --passalgo=sha512 # Habilita o uso de senhas criptografadas no formato SHA-512
selinux --disabled # Desativa o SELinux

# Criação de usuários
user --name=henrique --shell=/bin/bash --uid=1000 --password=$6$2ArCAWSG8u.Sa30r$y3xNCQ2oApwFogpYGfcLJziLAIRvKVkhKM.eNxnE9BgZpjg948kAmyT8k4rRexriuKIJIBb/Sq11IPH5izg2l/ --iscrypted # Cria o usuário henrique com shell bash, UID 1000, e senha criptografada

## Particionamento
# Cria um vg com tamanhos fixos e os corrige com porcentagem no pós script.
# Ignorar outros discos exceto sda
ignoredisk --only-use=sda # Ignora todos os discos exceto o sda

# Particionamento do disco (sda)
clearpart --all --initlabel # Remove todas as partições existentes no disco e inicializa uma nova tabela de partições
zerombr # Zera o Master Boot Record (MBR) para assegurar que não existam dados de inicialização anteriores

# Cria partições no disco (sda)
part /boot/efi --fstype=vfat --label=EFI --size=500  # Cria uma partição EFI de 500 MB com sistema de arquivos vfat
part /boot --fstype=ext4 --label=BOOT --size=1000 --fsoptions="nodev,nosuid,noexec"  # Cria uma partição /boot de 1000 MB com sistema de arquivos ext4 e opções de montagem de segurança
part pv.01 --ondrive=sda --grow --size=1 --asprimary  # Cria uma partição física de volume que será usada para o grupo de volumes, com tamanho ajustável

# Volume Group
volgroup vg00 pv.01  # Define um grupo de volumes chamado vg00 usando a partição pv.01

# Logical Volumes
logvol swap --fstype=swap --vgname=vg00 --size=2048 --name=lv_swap  # Cria um volume lógico de 2048 MB para swap
logvol / --fstype=xfs --vgname=vg00 --size=4096 --name=lv_root --grow  # Cria um volume lógico para a partição raiz com tamanho inicial de 4096 MB, ajustável
logvol /var --fstype=xfs --vgname=vg00 --size=4096 --grow --name=lv_var --fsoptions="nodev,nosuid" --grow # Cria um volume lógico para /var com sistema de arquivos xfs e opções de montagem de segurança
logvol /opt --fstype=xfs --vgname=vg00 --size=4096 --grow --name=lv_opt --fsoptions="nodev,nosuid"  # Cria um volume lógico para /opt com sistema de arquivos xfs e opções de montagem de segurança
logvol /home --fstype=xfs --vgname=vg00 --size=4096 --grow --name=lv_home --fsoptions="nodev,nosuid"  # Cria um volume lógico para /home com sistema de arquivos xfs e opções de montagem de segurança
logvol /tmp --fstype=xfs --vgname=vg00 --size=4096 --grow --name=lv_tmp --fsoptions="nodev,nosuid"  # Cria um volume lógico para /tmp com sistema de arquivos xfs e opções de montagem de segurança
logvol /opt/arquivos --fstype=xfs --vgname=vg00 --grow --size=4096 --name=lv_arquivos --fsoptions="nodev,nosuid"  # Cria um volume lógico para /opt/arquivos com sistema de arquivos xfs e opções de montagem de segurança


# Repositórios
url --url="https://repo.almalinux.org/almalinux/9/BaseOS/x86_64/kickstart/" # Define a URL do repositório BaseOS para a instalação via kickstart
url --url="https://repo.almalinux.org/almalinux/9/BaseOS/x86_64/os/" # Define a URL do repositório BaseOS para a instalação padrão
repo --name="almalinux9-baseos" --baseurl="https://repo.almalinux.org/almalinux/9/BaseOS/x86_64/os/" --mirrorlist="" # Configura o repositório Almalinux 9 BaseOS para arquitetura x86_64
repo --name="almalinux9-appstream" --baseurl="https://repo.almalinux.org/almalinux/9/AppStream/x86_64/os/" --mirrorlist="" # Configura o repositório Almalinux 9 AppStream para arquitetura x86_64
repo --name="almalinux9-baseos-aarch64" --baseurl="https://repo.almalinux.org/almalinux/9/BaseOS/aarch64/os/" --mirrorlist="" # Configura o repositório Almalinux 9 BaseOS para arquitetura aarch64


# Instalação dos pacotes
%packages
@core
xorg-x11-server-Xorg
tar
bzip2
git
vim
firefox

# Bibliotecas do jgmenu
cmake
gcc
gcc-c++
make
libxml2-devel
gtk3-devel
cairo-devel
pango-devel
gdk-pixbuf2-devel
libX11-devel
libXft-devel
libXrender-devel
libXrandr-devel
librsvg2-devel
libcurl-devel
libXt-devel
%end

# Executar script pós-instalação
%post --interpreter=/bin/bash --nochroot --logfile=/mnt/sysimage/root/logs/ks-post-nochroot.log # Início do script pós-instalação fora do ambiente chroot, usando o interpretador bash e registrando o log em ks-post-nochroot.log

# Copiar e executar o script pós-instalação
cp /run/install/repo/custom/pos_install.sh /mnt/sysimage/root/ && chmod a+x /mnt/sysimage/root/pos_install.sh # Copia o script pos_install.sh para o sistema instalado e torna-o executável
cp /run/install/repo/custom/confs.tar /mnt/sysimage/root # Copia o arquivo confs.tar para o sistema instalado

%end # Fim da seção pós-instalação fora do chroot

# Executa o script de pós-instalação
%post --logfile /root/logs/ks-post.log # Início do script pós-instalação dentro do ambiente chroot, registrando o log em ks-post.log
/root/pos_install.sh # Executa o script pos_install.sh no sistema instalado

%end # Fim da seção pós-instalação


